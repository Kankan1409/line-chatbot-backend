const express = require('express');
const { ApolloServer } = require('apollo-server-express');
const bodyParser = require('body-parser');
const path = require('path');
const indexRoutes = require('../routes/index');
const { typeDefs, resolvers } = require('./graphql/index'); // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ GraphQL Schema
const { sequelize } = require('../models'); // Import Sequelize instance

const app = express();
app.use(bodyParser.json()); // ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö JSON ‡πÉ‡∏ô‡∏Ñ‡∏≥‡∏Ç‡∏≠
app.use(express.static(path.join(__dirname, '../assets')));

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå
async function startServer() {
    const server = new ApolloServer({
      typeDefs,
      resolvers,
      context: { models: require('../models') }
    });
  
    await server.start();
    server.applyMiddleware({ app });
  
    console.log(`üöÄ Apollo Server ready at http://localhost:5000${server.graphqlPath}`);
  }
  
  startServer();

// ‡πÉ‡∏ä‡πâ Routes
app.use('/', indexRoutes);
app.use('/line', indexRoutes);

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå Express
const PORT = process.env.PORT || 5000;
app.listen(PORT, async () => {
    console.log(`‚úÖ Server is running on port ${PORT}`);
    await startServer(); // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô GraphQL Server
});

module.exports = app;
